// Generated by CoffeeScript 1.7.1
(function() {
  $(document).ready(function() {
    var $alertMessage, $collectionHolder, $employeeError, $form, createDeleteButton, createHolidayRequest, prototype, validateDates;
    $('#leave_request').find('label:first').remove();
    $collectionHolder = $('#leave_request_leaves');
    $collectionHolder.data('index', 0);
    prototype = $collectionHolder.data('prototype');
    prototype = prototype.replace('<label class="required">__name__label__</label>', '');
    $form = $collectionHolder.closest('form');
    $form.prepend($('.formFieldset'));
    $form.find('#leave_request_create_leave_request').parent().append($('#cancel-button'));
    $employeeError = $('#leave_request').find('ul');
    if ($employeeError.length > 0) {
      $alertMessage = $('.alert-message');
      $alertMessage.removeClass('display-none');
      $alertMessage.append($employeeError);
    }
    createDeleteButton = function() {
      var $deleteButtonWrapper;
      $deleteButtonWrapper = $('<div>').addClass('deleteFormFieldsetChild formFieldsetButton form-fieldset-delete-button');
      $deleteButtonWrapper.html('<i class="fa fa-minus-square"></i>Delete');
      $deleteButtonWrapper.on('click', function() {
        return $(this).closest('.formFieldsetChild').remove();
      });
      return $deleteButtonWrapper;
    };
    createHolidayRequest = function($holidayRequest) {
      var $errorList, $errorListParent, $input, $requestContainer, index;
      index = $collectionHolder.data('index');
      $requestContainer = $('<div>').addClass('formFieldsetChild padding-10 margin-left-1-em margin-bottom-1-em display-inline-block vertical-align-top');
      if ($holidayRequest === void 0) {
        $holidayRequest = $(prototype.replace(/__name__/g, index));
        $requestContainer.append($holidayRequest);
        $(document).data('notes').funcs.initDateInputs($holidayRequest);
      } else {
        $requestContainer.append($holidayRequest);
      }
      $holidayRequest.append(createDeleteButton());
      $errorList = $holidayRequest.find('ul');
      $errorListParent = $errorList.parent();
      if ($errorList.length > 0) {
        $errorListParent.append($('<label>').addClass('error').html($errorList.find('li:first').html()));
        $input = $errorListParent.find('input');
        $input.addClass('error');
        $errorList.remove();
      }
      $holidayRequest.find('.start-date').removeAttr('required');
      $holidayRequest.find('.end-date').removeAttr('required');
      $requestContainer.insertBefore($('.addFormFieldsetChild'));
      $collectionHolder.data('index', index + 1);
    };
    validateDates = function() {
      var valid;
      valid = true;
      $('.formFieldsetChild').each(function(index) {
        var $endDate, $endDateParent, $errorLabel, $startDate, $startDateParent, endDateVal, startDateVal;
        $startDate = $(this).find('.start-date');
        $startDateParent = $startDate.parent();
        startDateVal = $startDate.val();
        $endDate = $(this).find('.end-date');
        $endDateParent = $endDate.parent();
        endDateVal = $endDate.val();
        $startDate.removeClass('error');
        $startDateParent.find('label.error').remove();
        $endDate.removeClass('error');
        $endDateParent.find('label.error').remove();
        if (startDateVal === '') {
          $errorLabel = $('<label>').addClass('error').html('Start date cannot be empty');
          $startDate.addClass('error');
          $startDateParent.append($errorLabel);
          valid = false;
        }
        if (endDateVal === '') {
          $errorLabel = $('<label>').addClass('error').html('End date cannot be empty');
          $endDate.addClass('error');
          $endDateParent.append($errorLabel);
          valid = false;
        }
        if (valid === true) {
          if (startDateVal > endDateVal) {
            if ($startDate.hasClass('error') === false) {
              $startDate.addClass('error');
              $errorLabel = $('<label>').addClass('error').html('Start date should be bigger than end date.');
              $startDateParent.append($errorLabel);
            }
            return valid = false;
          }
        }
      });
      return valid;
    };
    $collectionHolder.children().each(function(index) {
      $(this).find('label:first').remove();
      return createHolidayRequest($(this));
    });
    $('.addFormFieldsetChild').on('click', function() {
      return createHolidayRequest();
    });
    return $('#leave_request_create_leave_request').on('click', function(event) {
      event.preventDefault();
      if (validateDates() === true) {
        return $form.submit();
      }
    });
  });

}).call(this);
