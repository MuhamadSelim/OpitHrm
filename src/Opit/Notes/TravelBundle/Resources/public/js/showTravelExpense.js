// Generated by CoffeeScript 1.6.3
(function() {
  var $addCompanyTagLink, $addUserTagLink, $expensesPaidByMe, $expensesPaidByOpit, $form, $formFieldset, $generalFormFieldset, addNewForm, createDeleteButton, reCreateExpenses;

  createDeleteButton = function() {
    var $deleteButton;
    $deleteButton = $('<div>');
    $deleteButton.addClass('deleteFormFieldsetChild formFieldsetButton').html('<i class="fa fa-minus-square"></i>Delete');
    $deleteButton.on('click', function() {
      return $(this).parent().remove();
    });
    return $deleteButton;
  };

  reCreateExpenses = function(self) {
    var $container, $selectedExpense;
    $selectedExpense = $('<span>').addClass('selected-expense');
    $selectedExpense.html(self.find('select').find(':selected').text());
    $container = $('<div>').addClass('formFieldsetChild');
    self.children('label:first').remove();
    $container.append(self);
    $container.append(createDeleteButton());
    $container.prepend($selectedExpense);
    return $container;
  };

  addNewForm = function(collectionHolder, parent) {
    var $formFieldsetChild, $selectedExpense, index, newForm, prototype;
    event.preventDefault();
    prototype = collectionHolder.data('prototype');
    index = collectionHolder.data('index');
    prototype = prototype.replace('<label class="required">__name__label__</label>', '');
    newForm = prototype.replace(/__name__/g, index);
    $selectedExpense = $('<span>').addClass('selected-expense');
    $selectedExpense.html('Expense type');
    $formFieldsetChild = $('<div>').addClass('formFieldsetChild');
    $formFieldsetChild.append(newForm);
    $formFieldsetChild.append(createDeleteButton());
    $formFieldsetChild.prepend($selectedExpense);
    collectionHolder.data('index', index + 1);
    return parent.append($formFieldsetChild);
  };

  $(document).ready(function() {
    var companyPaidExpensesIndex, userPaidExpensesIndex;
    $('#travelExpense').children('.formFieldset:nth-child(3)').append($addCompanyTagLink);
    $('#travelExpense').children('.formFieldset:nth-child(2)').append($addUserTagLink);
    companyPaidExpensesIndex = 0;
    userPaidExpensesIndex = 0;
    if ($('#travelExpense_companyPaidExpenses').children('div').length > 0) {
      $('#travelExpense_companyPaidExpenses').children('div').each(function() {
        var $container;
        $container = reCreateExpenses($(this));
        $('#travelExpense').children('.formFieldset:nth-child(3)').append($container);
        return companyPaidExpensesIndex++;
      });
    }
    if ($('#travelExpense_userPaidExpenses').children('div').length > 0) {
      $('#travelExpense_userPaidExpenses').children('div').each(function() {
        var $container;
        $container = reCreateExpenses($(this));
        $('#travelExpense').children('.formFieldset:nth-child(2)').append($container);
        return userPaidExpensesIndex++;
      });
    }
    $('#travelExpense_companyPaidExpenses').data('index', companyPaidExpensesIndex);
    $('#travelExpense_userPaidExpenses').data('index', userPaidExpensesIndex);
    $('#travelExpense_companyPaidExpenses').parent().children('label').remove();
    return $('#travelExpense_userPaidExpenses').parent().children('label').remove();
  });

  $formFieldset = $('<div>');

  $formFieldset.addClass('formFieldset');

  $generalFormFieldset = $formFieldset.clone().addClass('generalFormFieldset');

  $expensesPaidByMe = $formFieldset.clone().append($('<h3>').html('Expenses paid by me'));

  $expensesPaidByOpit = $formFieldset.clone().append($('<h3>').html('Expenses paid by opit'));

  $('#travelExpense').prepend($expensesPaidByOpit);

  $('#travelExpense').prepend($expensesPaidByMe);

  $('#travelExpense').prepend($generalFormFieldset);

  $('#travelExpense').addClass('travelForm');

  $('.formFieldset').on('change', '.te-expense-type', function() {
    return $(this).closest('.formFieldsetChild').children('.selected-expense').html($("#" + ($(this).attr('id')) + " :selected").text());
  });

  $('.te-claim').each(function(index) {
    $(this).parent().addClass('inlineElements');
    $generalFormFieldset.append($(this).parent());
    if ($(this).hasClass('display-none')) {
      $(this).removeClass('display-none');
      $(this).parent().addClass('display-none');
    }
    if (index % 2) {
      return $generalFormFieldset.append($('<br>'));
    }
  });

  $addCompanyTagLink = $('<div class="addFormFieldsetChild formFieldsetButton"><i class="fa fa-plus-square"></i>Add company expense</div>');

  $addCompanyTagLink.on('click', function() {
    return addNewForm($('#travelExpense_companyPaidExpenses'), $('#travelExpense').children('.formFieldset:nth-child(3)'));
  });

  $addUserTagLink = $('<div class="addFormFieldsetChild formFieldsetButton"><i class="fa fa-plus-square"></i>Add user expense</div>');

  $addUserTagLink.on('click', function() {
    return addNewForm($('#travelExpense_userPaidExpenses'), $('#travelExpense').children('.formFieldset:nth-child(2)'));
  });

  $form = $('#travelExpenseForm');

  $.validator.addMethod('compare', function(value, element) {
    var arrivalDate, departureDate;
    departureDate = $('#travelExpense_departureDateTime').val();
    arrivalDate = $('#travelExpense_arrivalDateTime').val();
    return departureDate < arrivalDate;
  }, 'Arrival date should not be smaller than departure date.');

  $form.validate({
    ignore: [],
    rules: {
      "travelExpense[arrivalDateTime]": "compare"
    }
  });

  $('#travelExpense_add_travel_expense').on('click', function() {
    event.preventDefault();
    if ($form.valid()) {
      console.log('valid');
      return $.ajax({
        method: 'POST',
        url: Routing.generate('OpitNotesTravelBundle_expense_show_details'),
        data: 'preview=1&' + $form.serialize()
      }).done(function(data) {
        var $preview;
        $preview = $('<div id="dialog-travelrequest-preview"></div>').html(data);
        return $preview.dialog({
          open: function() {
            return $('.ui-dialog-title').append('<i class="fa fa-list-alt"></i> Details');
          },
          close: function() {
            return $preview.dialog("destroy");
          },
          width: 550,
          maxHeight: $(window).outerHeight() - 100,
          modal: true,
          buttons: {
            Cancel: function() {
              $preview.dialog("destroy");
            },
            Save: function() {
              $form.submit();
              $preview.dialog("destroy");
            }
          }
        });
      }).fail(function() {
        return $('<div></div>').html('The travel expense could not be saved due to an error.').dialog({
          title: 'Error'
        });
      });
    }
  });

}).call(this);
