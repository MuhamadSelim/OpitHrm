// Generated by CoffeeScript 1.7.1
(function() {
  var $accomodationCollection, $addAccomodation, $addDestination, $destinationCollection, $div, $errorMessages, $form, accomodationsLabel, addForm, addFormDeleteButton, compareDays, destinationsLabel, generalData, numberOfNightsListener, requiredApprovals, travelOpportunity, travelRequestAccomodations0, travelRequestDestinations0;

  addFormDeleteButton = function() {
    var $deleteButton;
    $deleteButton = $('<div>').html('<i class="fa fa-minus-square"></i>Delete');
    $deleteButton.addClass('deleteFormFieldsetChild formFieldsetButton');
    $deleteButton.click(function() {
      return $(this).parent().remove();
    });
    return $deleteButton;
  };

  numberOfNightsListener = function(form) {
    form.find('input[type=number]').first().addClass('number-of-nights');
    return form.find('input[type=number]').first().on('change', function() {
      return compareDays();
    });
  };

  $('.travel-status-history').click(function(event) {
    var id;
    event.preventDefault();
    id = $(this).data('id');
    return $(document).data('notes').funcs.showTravelStatusHistory(id, 'tr');
  });

  compareDays = function() {
    var $accomodationWrapper, $errorMessage, accomodationDays, arrivalDate, departureDate, diffDays;
    departureDate = new Date($('#travelRequest_departure_date').val());
    arrivalDate = new Date($('#travelRequest_arrival_date').val());
    diffDays = (arrivalDate.getTime() - departureDate.getTime()) / (24 * 60 * 60 * 1000);
    accomodationDays = '0';
    $('#travelRequest_accomodations').find('.number-of-nights').each(function() {
      return accomodationDays = parseInt($(this).val()) + parseInt(accomodationDays);
    });
    $accomodationWrapper = $('#travelRequest_accomodations');
    if (accomodationDays > diffDays) {
      if ($accomodationWrapper.children('label.custom-error').length === 0) {
        $errorMessage = $('<label>').html('Total accomodation duration can not exceed travel request duration.').addClass('custom-error');
        $accomodationWrapper.prepend('<br />');
        $accomodationWrapper.prepend($errorMessage);
      }
      return false;
    } else {
      $accomodationWrapper.children('label.custom-error').remove();
      $accomodationWrapper.children('br').remove();
      return true;
    }
  };

  $(document).ready(function() {
    var $arrivalDate, $buttonParent, $departureDate;
    $buttonParent = $('#travelRequest_add_travel_request').parent();
    $(document).data('notes').funcs.createButton('Cancel', 'button display-inline-block', '', $buttonParent, 'OpitNotesTravelBundle_travel_list');
    $(document).data('notes').funcs.makeElementToggleAble('h3', $('.formFieldset'));
    $('#travelRequest').css({
      display: 'block'
    });
    $('.disabled input').each(function() {
      return $(this).attr('disabled', 'disabled');
    });
    $('.disabled select').each(function() {
      return $(this).attr('disabled', 'disabled');
    });
    $('.disabled button').each(function() {
      $(this).attr('disabled', 'disabled');
      return $(this).addClass('button-disabled');
    });
    if ($('#travelRequest_add_travel_request').attr('disabled')) {
      $('.addFormFieldsetChild').each(function() {
        return $(this).remove();
      });
      $('.deleteFormFieldsetChild').each(function() {
        return $(this).remove();
      });
    }
    $('.changeState').on('change', function() {
      var $spinner, statusId, travelRequestId;
      statusId = $(this).val();
      travelRequestId = $(this).data('tr');
      $spinner = $(document).data('notes').funcs.disableStatusDropdown($(this));
      return $(document).data('notes').funcs.changeTravelStatus(statusId, travelRequestId, $spinner);
    });
    if (!Modernizr.inputtypes.date) {
      $arrivalDate = $('#travelRequest_arrival_date');
      $departureDate = $('#travelRequest_departure_date');
      $('#altDatetravelRequest_arrival_date').val($arrivalDate.val());
      $('#altDatetravelRequest_departure_date').val($departureDate.val());
      $arrivalDate.val($arrivalDate.val().replace(/(\d{4})-(\d{2})-(\d{2})/, "$2/$3/$1"));
      return $departureDate.val($departureDate.val().replace(/(\d{4})-(\d{2})-(\d{2})/, "$2/$3/$1"));
    }
  });

  $('label.required').each(function() {
    if ($(this).text() === '0') {
      $(this).remove();
    }
  });

  generalData = $('<div>').addClass('formFieldset generalFormFieldset');

  generalData.append($('#travelRequest_user_ac, #travelRequest_departure_date, #travelRequest_arrival_date, #travelRequest_customer_related, #travelRequest_opportunity_name, #travelRequest_trip_purpose').parent());

  $('#travelRequest').prepend(generalData);

  requiredApprovals = $('<div>').addClass('formFieldset marginLeft');

  requiredApprovals.append($('<h3>').html('Required approvals'));

  $div = $('<div>');

  $div.append($('#travelRequest_team_manager_ac').parent());

  $div.append($('#travelRequest_general_manager_ac').parent());

  requiredApprovals.append($div);

  $('#travelRequest_general_manager').after(requiredApprovals);

  $('#travelRequest_destinations').parent().addClass('formFieldset');

  $('#travelRequest_accomodations').parent().addClass('formFieldset');

  $('#travelRequest_departure_date, #travelRequest_arrival_date, #travelRequest_customer_related, #travelRequest_opportunity_name, #travelRequest_team_manager_ac, #travelRequest_general_manager_ac').parent().addClass('inlineElements');

  $('#travelRequest_arrival_date').parent().after('<br />');

  accomodationsLabel = $('#travelRequest_accomodations').parent().children('label');

  accomodationsLabel.replaceWith('<h3>' + accomodationsLabel.html() + '</h3>');

  destinationsLabel = $('#travelRequest_destinations').parent().children('label');

  destinationsLabel.replaceWith('<h3>' + destinationsLabel.html() + '</h3>');

  travelRequestDestinations0 = $('#travelRequest_destinations_0');

  if ($('#travelRequest_destinations :input[type=text]').length > 1) {
    $('#travelRequest_destinations').children().each(function() {
      $(this).addClass('formFieldsetChild');
      $(this).children().remove('label');
      return $(this).append(addFormDeleteButton);
    });
  } else {
    if ($('#travelRequest_destinations :input[type=text]').val() === "") {
      travelRequestDestinations0.parent().remove();
    } else {
      travelRequestDestinations0.parent().addClass('formFieldsetChild');
      travelRequestDestinations0.parent().append(addFormDeleteButton);
    }
  }

  travelRequestAccomodations0 = $('#travelRequest_accomodations_0');

  if ($('#travelRequest_accomodations :input[type=text]').length > 2) {
    $('#travelRequest_accomodations').children().each(function() {
      numberOfNightsListener($(this));
      $(this).addClass('formFieldsetChild');
      $(this).children().remove('label');
      return $(this).append(addFormDeleteButton);
    });
  } else {
    if ($('#travelRequest_accomodations :input[type=text]').val() === "") {
      travelRequestAccomodations0.parent().remove();
    } else {
      numberOfNightsListener(travelRequestAccomodations0.parent());
      travelRequestAccomodations0.parent().addClass('formFieldsetChild');
      travelRequestAccomodations0.parent().append(addFormDeleteButton);
    }
  }

  travelOpportunity = $('#travelRequest_opportunity_name');

  if (travelOpportunity.val() === '') {
    travelOpportunity.parent().css({
      visibility: 'hidden'
    });
  } else {
    $('#travelRequest_customer_related').val('0');
  }

  $('#travelRequest_customer_related').change(function() {
    if ($(this).val() === "0") {
      travelOpportunity.parent().css({
        visibility: 'visible'
      });
      return travelOpportunity.attr('required', 'required');
    } else {
      travelOpportunity.parent().css({
        visibility: 'hidden'
      });
      return travelOpportunity.removeAttr('required');
    }
  });

  $form = $('#travelRequestForm');

  $('#travelRequest_user_ac').autocomplete({
    source: Routing.generate('OpitNotesTravelBundle_travel_userSearch', {
      role: 'all'
    }),
    minLength: 2,
    response: function(event, ui) {},
    select: function(event, ui) {
      $('#travelRequest_user').val(ui.item.id);
    }
  });

  $('#travelRequest_team_manager_ac').autocomplete({
    source: Routing.generate('OpitNotesTravelBundle_travel_userSearch', {
      role: 'team_manager'
    }),
    minLength: 2,
    select: function(event, ui) {
      $('#travelRequest_team_manager').val(ui.item.id);
    }
  });

  $('#travelRequest_general_manager_ac').autocomplete({
    source: Routing.generate('OpitNotesTravelBundle_travel_userSearch', {
      role: 'general_manager'
    }),
    minLength: 2,
    select: function(event, ui) {
      $('#travelRequest_general_manager').val(ui.item.id);
    }
  });

  $addDestination = $('<div class="addFormFieldsetChild formFieldsetButton"><i class="fa fa-plus-square"></i>Add destination</div>');

  $destinationCollection = $('#travelRequest_destinations').append($addDestination);

  $destinationCollection.data('index', $destinationCollection.find(':input').length);

  $addDestination.click(function(e) {
    e.preventDefault();
    addForm($destinationCollection, $addDestination);
  });

  $addAccomodation = $('<div class="addFormFieldsetChild formFieldsetButton"><i class="fa fa-plus-square"></i>Add accomodation</div>');

  $accomodationCollection = $('#travelRequest_accomodations').append($addAccomodation);

  $accomodationCollection.data('index', $accomodationCollection.find(':input').length);

  $addAccomodation.click(function(e) {
    e.preventDefault();
    addForm($accomodationCollection, $addAccomodation, true);
  });

  addForm = function($collectionHolder, $addButton, addListener) {
    var $newForm, index, newForm, prototype;
    prototype = $collectionHolder.data('prototype');
    index = $collectionHolder.data('index');
    newForm = prototype.replace('<label class="required">__name__label__</label>', '');
    newForm = newForm.replace(/__name__/g, index);
    $newForm = $(newForm);
    $newForm = $newForm.append(addFormDeleteButton);
    $newForm.addClass('formFieldsetChild');
    if (addListener) {
      numberOfNightsListener($newForm);
    }
    $newForm.find('.currency option[value=EUR]').attr('selected', 'selected');
    $collectionHolder.data('index', index + 1);
    return $addButton.before($newForm);
  };

  $('#travelRequest_departure_date').on('change', function() {
    return compareDays();
  });

  $('#travelRequest_arrival_date').on('change', function() {
    return compareDays();
  });

  $form = $('#travelRequestForm');

  $errorMessages = $('#travelRequestForm ul');

  $errorMessages.remove();

  $.validator.addMethod('compare', function(value, element) {
    var arrivalDate, departureDate;
    departureDate = $('#travelRequest_departure_date').val();
    arrivalDate = $('#travelRequest_arrival_date').val();
    return departureDate <= arrivalDate;
  }, 'Arrival date should not be earlier than departure date.');

  $.validator.addMethod('checkId', function(value, element) {
    var $element, $idElement, id;
    $element = $(element);
    id = $(element).attr('id');
    $idElement = $('#' + id.substr(0, id.length - 3));
    if ($element.val()) {
      if (!$idElement.val()) {
        return false;
      } else {
        return true;
      }
    } else {
      return false;
    }
  }, 'This field is required.');

  $form.validate({
    ignore: [],
    rules: {
      "travelRequest[arrival_date]": "compare",
      "travelRequest[user_ac]": "checkId",
      "travelRequest[general_manager_ac]": "checkId"
    }
  });

  $('#travelRequest_add_travel_request').click(function(event) {
    event.preventDefault();
    if ($form.valid() && compareDays()) {
      $.ajax({
        method: 'POST',
        url: Routing.generate('OpitNotesTravelBundle_travel_show_details'),
        data: 'preview=1&' + $form.serialize()
      }).done(function(data) {
        var $preview;
        $preview = $('<div id="dialog-travelrequest-preview"></div>').html(data);
        return $preview.dialog({
          open: function() {
            return $('.ui-dialog-title').append('<i class="fa fa-list-alt"></i> Details');
          },
          close: function() {
            return $preview.dialog("destroy");
          },
          width: 550,
          maxHeight: $(window).outerHeight() - 100,
          modal: true,
          buttons: {
            Save: function() {
              $form.submit();
              $preview.dialog("destroy");
            },
            'Save & send for approval': function() {
              var formAction;
              formAction = $form.attr('action') + '/fa';
              if (isNaN(window.location.href.slice(-1))) {
                formAction = $form.attr('action') + '/new/fa';
              }
              $form.attr('action', formAction);
              $form.submit();
              $preview.dialog("destroy");
            },
            Cancel: function() {
              $preview.dialog("destroy");
            }
          }
        });
      }).fail(function() {
        return $('<div></div>').html('The travel request could not be saved due to an error.').dialog({
          title: 'Error'
        });
      });
    }
  });

}).call(this);
