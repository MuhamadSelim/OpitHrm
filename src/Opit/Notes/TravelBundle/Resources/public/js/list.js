// Generated by CoffeeScript 1.7.1
(function() {
  var changeTravelStatus;

  changeTravelStatus = function(statusId, travelRequestId, firstStatusId) {
    var reloadPage;
    reloadPage = true;
    return $.ajax({
      method: 'POST',
      url: Routing.generate('OpitNotesTravelBundle_request_state'),
      data: {
        'statusId': statusId,
        'travelRequestId': travelRequestId,
        'firstStatusId': firstStatusId
      }
    }).done(function(data) {
      var dialogWidth;
      if (data === 'error') {
        reloadPage = false;
        dialogWidth = 550;
        $('<div id="dialog-show-details-tr"></div>').html('You cannot change the status of the travel request because it has been already changed.').dialog({
          open: function() {
            return $('.ui-dialog-title').append('<i class="fa fa-exclamation-triangle"></i> Status cannot be changed');
          }
        });
        return {
          width: dialogWidth,
          maxHeight: $(window).outerHeight() - 100,
          modal: true,
          buttons: {
            Reload: function() {
              location.reload();
            }
          }
        };
      }
    }).complete(function() {
      if (reloadPage === true) {
        return location.reload();
      }
    }).fail(function(data) {
      return console.warn('An error occured while setting new status for the request.');
    });
  };

  $(document).ready(function() {
    $('.print-view').on('click', function(event) {
      var url, win;
      event.preventDefault();
      url = $(this).attr('href');
      win = window.open(url, '_blank');
      return win.focus();
    });
    $('.changeState').on('change', function() {
      var firstStatusId, statusId, travelRequestId;
      $(this).addClass('dropdown-disabled');
      statusId = $(this).val();
      travelRequestId = $(this).closest('tr').find('.clickable').data('tr-id');
      firstStatusId = $(this).find('option:first-child').val();
      return $(document).data('notes').funcs.changeTravelStatus(statusId, travelRequestId, firstStatusId);
    });
    $('#searchButton').click(function(event) {
      var $form, url;
      $form = $('#searchFormWrapper').find('form');
      url = $form.attr('action');
      event.preventDefault();
      if (!$form.formIsEmpty()) {
        return;
      }
      return $.ajax({
        method: 'POST',
        url: url,
        data: $form.serialize()
      }).done(function(response) {
        $('#list-table').parent().html(response);
        $(document).data('notes').funcs.initListPageListeners();
        $(document).data('notes').funcs.initPager();
      });
    });
  });

  $('#travel_list').on('click', '.order-text', function() {
    return $(document).data('notes').funcs.serverSideListOrdering($(this), $(this).parent().find('i').attr('data-field'), 'OpitNotesTravelBundle_travel_list', 'travel_list');
  });

  $('#travel_list').on('click', '.fa-sort', function() {
    return $(document).data('notes').funcs.serverSideListOrdering($(this), $(this).data('field'), 'OpitNotesTravelBundle_travel_list', 'travel_list');
  });

}).call(this);
