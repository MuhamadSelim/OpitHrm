// Generated by CoffeeScript 1.6.3
(function() {
  var deleteSingleRequest;

  $(document).ready(function() {
    var changeTravelStatus;
    changeTravelStatus = function(statusId, travelRequestId, firstStatusId) {
      var reloadPage;
      reloadPage = true;
      return $.ajax({
        method: 'POST',
        url: Routing.generate('OpitNotesTravelBundle_request_state'),
        data: {
          'statusId': statusId,
          'travelRequestId': travelRequestId,
          'firstStatusId': firstStatusId
        }
      }).done(function(data) {
        var dialogWidth;
        if (data === 'error') {
          reloadPage = false;
          dialogWidth = 550;
          return $('<div id="dialog-show-details-tr"></div>').html('You cannot change the status of the travel request because it has been already changed.').dialog({
            open: function() {
              return $('.ui-dialog-title').append('<i class="fa fa-exclamation-triangle"></i> Status cannot be changed');
            },
            width: dialogWidth,
            maxHeight: $(window).outerHeight() - 100,
            modal: true,
            buttons: {
              Reload: function() {
                location.reload();
              }
            }
          });
        }
      }).complete(function() {
        if (reloadPage === true) {
          return location.reload();
        }
      }).fail(function(data) {
        return console.warn('An error occured while setting new status for the request.');
      });
    };
    $('.print-view').on('click', function(event) {
      var url, win;
      event.preventDefault();
      url = $(this).attr('href');
      win = window.open(url, '_blank');
      return win.focus();
    });
    $('.changeState').on('change', function() {
      var firstStatusId, statusId, travelRequestId;
      $(this).addClass('dropdown-disabled');
      statusId = $(this).val();
      travelRequestId = $(this).closest('tr').find('.clickable').data('tr-id');
      firstStatusId = $(this).find('option:first-child').val();
      return changeTravelStatus(statusId, travelRequestId, firstStatusId);
    });
    return $('.status-history').click(function(event) {
      event.preventDefault();
      return $.ajax({
        method: 'POST',
        url: Routing.generate('OpitNotesTravelBundle_travel_states_history'),
        data: {
          'id': $(this).find('.fa-book').data('id')
        }
      }).done(function(data) {
        var dialogWidth;
        dialogWidth = 550;
        $('<div id="dialog-show-details-tr"></div>').html(data).dialog({
          open: function() {
            return $('.ui-dialog-title').append('<i class="fa fa-book"></i> Status history');
          },
          width: dialogWidth,
          maxHeight: $(window).outerHeight() - 100,
          modal: true,
          buttons: {
            Close: function() {
              $('#dialog-show-details-tr').dialog('destroy');
            }
          }
        });
      });
    });
  });

  deleteSingleRequest = function(type, self) {
    var $checkbox;
    $checkbox = self.closest('tr').find(':checkbox');
    $checkbox.prop('checked', true);
    $('<div></div>').html("Are you sure you want to delete the travel " + type + "?").dialog({
      title: 'Travel request removal',
      buttons: {
        Yes: function() {
          $.ajax({
            method: 'POST',
            url: type === 'expense' ? Routing.generate('OpitNotesTravelBundle_expense_delete') : Routing.generate('OpitNotesTravelBundle_travel_delete'),
            data: {
              'id': self.data('id')
            }
          }).done(function(data) {
            if (data === '0') {
              self.parent().parent().remove();
            }
          }).fail(function() {
            return $('<div></div>').html("The travel " + type + " could not be deleted due to an error.").dialog({
              title: 'Error'
            });
          });
          $(this).dialog('close');
        },
        No: function() {
          $checkbox.prop('checked', false);
          $(this).dialog('close');
        }
      },
      close: function() {
        $(this).dialog('destroy');
      }
    });
  };

  $('#list-table').on('click', '.clickable', function() {
    var firstStatusId, travelRequestId;
    travelRequestId = $(this).attr('data-tr-id');
    firstStatusId = $(this).parent().find('option:first-child').val();
    $.ajax({
      method: 'POST',
      url: Routing.generate('OpitNotesTravelBundle_travel_show_details'),
      data: {
        'id': travelRequestId
      }
    }).done(function(data) {
      var dialogWidth;
      dialogWidth = 550;
      $('<div id="dialog-show-details-tr"></div>').html(data).dialog({
        open: function() {
          return $('.ui-dialog-title').append('<i class="fa fa-list-alt"></i> Details');
        },
        width: dialogWidth,
        maxHeight: $(window).outerHeight() - 100,
        modal: true
      }, firstStatusId === '1' || firstStatusId === '3' ? {
        buttons: {
          'Send for approval': function() {
            changeTravelStatus(2, travelRequestId, firstStatusId);
            return $('#dialog-show-details-tr').dialog('destroy');
          },
          Close: function() {
            $('#dialog-show-details-tr').dialog('destroy');
          }
        }
      } : {
        buttons: {
          Close: function() {
            $('#dialog-show-details-tr').dialog('destroy');
          }
        }
      });
    });
  });

  $('#list-table th i').click(function() {
    $('.deleteMultipleTravelRequest').checkAll();
    return $('.deleteMultipleTravelExpense').checkAll();
  });

  $('.deleteSingeTravelRequest').click(function(event) {
    event.preventDefault();
    return deleteSingleRequest('request', $(this));
  });

  $('.deleteSingeTravelExpense').click(function() {
    event.preventDefault();
    return deleteSingleRequest('expense', $(this));
  });

  $('#delete').click(function() {
    var checkBoxClass, errorText, selectedTravelRequestRow, title, travelRequests, url, warningMessage;
    warningMessage = 'Are you sure you want to delete the selected travel requests?';
    checkBoxClass = '.deleteMultipleTravelRequest';
    url = Routing.generate('OpitNotesTravelBundle_travel_delete');
    title = 'Travel request removal';
    errorText = 'The travel request could not be deleted due to an error.';
    if ($(this).hasClass('expense')) {
      warningMessage = 'Are you sure you want to delete the selected travel expenses?';
      checkBoxClass = '.deleteMultipleTravelExpense';
      url = Routing.generate('OpitNotesTravelBundle_expense_delete');
      title = 'Travel expense removal';
      errorText = 'The travel expense could not be deleted due to an error.';
    }
    travelRequests = [];
    selectedTravelRequestRow = [];
    $(checkBoxClass).each(function() {
      if ($(this).is(':checked')) {
        travelRequests.push($(this).val());
        return selectedTravelRequestRow.push($(this).parent().parent());
      }
    });
    $('<div></div>').html(warningMessage).dialog({
      title: title,
      buttons: {
        Yes: function() {
          $.ajax({
            method: 'POST',
            url: url,
            data: {
              'id': travelRequests
            }
          }).done(function(data) {
            $(selectedTravelRequestRow).each(function() {
              return $(this).remove();
            });
          }).fail(function() {
            return $('<div></div>').html(errorText).dialog({
              title: 'Error'
            });
          });
          $(this).dialog('close');
        },
        No: function() {
          $(this).dialog('close');
        }
      },
      close: function() {
        $(this).dialog('destroy');
      }
    });
  });

}).call(this);
