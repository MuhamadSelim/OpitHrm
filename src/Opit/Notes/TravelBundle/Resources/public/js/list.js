// Generated by CoffeeScript 1.7.1
(function() {
  var changeTravelStatus, deleteSingleRequest;

  changeTravelStatus = function(statusId, travelRequestId, firstStatusId) {
    var reloadPage;
    reloadPage = true;
    return $.ajax({
      method: 'POST',
      url: Routing.generate('OpitNotesTravelBundle_request_state'),
      data: {
        'statusId': statusId,
        'travelRequestId': travelRequestId,
        'firstStatusId': firstStatusId
      }
    }).done(function(data) {
      var dialogWidth;
      if (data === 'error') {
        reloadPage = false;
        dialogWidth = 550;
        $('<div id="dialog-show-details-tr"></div>').html('You cannot change the status of the travel request because it has been already changed.').dialog({
          open: function() {
            return $('.ui-dialog-title').append('<i class="fa fa-exclamation-triangle"></i> Status cannot be changed');
          }
        });
        return {
          width: dialogWidth,
          maxHeight: $(window).outerHeight() - 100,
          modal: true,
          buttons: {
            Reload: function() {
              location.reload();
            }
          }
        };
      }
    }).complete(function() {
      if (reloadPage === true) {
        return location.reload();
      }
    }).fail(function(data) {
      return console.warn('An error occured while setting new status for the request.');
    });
  };

  $(document).ready(function() {
    $('.print-view').on('click', function(event) {
      var url, win;
      event.preventDefault();
      url = $(this).attr('href');
      win = window.open(url, '_blank');
      return win.focus();
    });
    $('.changeState').on('change', function() {
      var firstStatusId, statusId, travelRequestId;
      $(this).addClass('dropdown-disabled');
      statusId = $(this).val();
      travelRequestId = $(this).closest('tr').find('.clickable').data('tr-id');
      firstStatusId = $(this).find('option:first-child').val();
      return $(document).data('notes').funcs.changeTravelStatus(statusId, travelRequestId, firstStatusId);
    });
    $('.status-history').click(function(event) {
      event.preventDefault();
      return $.ajax({
        method: 'POST',
        url: Routing.generate('OpitNotesTravelBundle_travel_states_history'),
        data: {
          'id': $(this).find('.fa-book').data('id')
        }
      }).done(function(data) {
        var dialogWidth;
        dialogWidth = 550;
        $('<div id="dialog-show-details-tr"></div>').html(data).dialog({
          open: function() {
            return $('.ui-dialog-title').append('<i class="fa fa-book"></i> Status history');
          },
          width: dialogWidth,
          maxHeight: $(window).outerHeight() - 100,
          modal: true,
          buttons: {
            Close: function() {
              $('#dialog-show-details-tr').dialog('destroy');
            }
          }
        });
      });
    });
    $('#searchButton').click(function(event) {
      var $form, url;
      $form = $('#searchFormWrapper').find('form');
      url = $form.attr('action');
      event.preventDefault();
      if (!$form.formIsEmpty()) {
        return;
      }
      return $.ajax({
        method: 'POST',
        url: url,
        data: $form.serialize()
      }).done(function(response) {
        $('#list-table').parent().html(response);
        $(document).data('notes').funcs.initListPageListeners();
        $(document).data('notes').funcs.initPager();
      });
    });
  });

  deleteSingleRequest = function(type, self) {
    var $checkbox;
    $checkbox = self.closest('tr').find(':checkbox');
    $checkbox.prop('checked', true);
    $('<div></div>').html("Are you sure you want to delete the travel " + type + "?").dialog({
      title: 'Travel request removal',
      buttons: {
        Yes: function() {
          $.ajax({
            method: 'POST',
            url: type === 'expense' ? Routing.generate('OpitNotesTravelBundle_expense_delete') : Routing.generate('OpitNotesTravelBundle_travel_delete'),
            data: {
              'id': self.data('id')
            }
          }).done(function(data) {
            if (data === '0') {
              self.parent().parent().remove();
            }
          }).fail(function() {
            return $('<div></div>').html("The travel " + type + " could not be deleted due to an error.").dialog({
              title: 'Error'
            });
          });
          $(this).dialog('close');
        },
        No: function() {
          $checkbox.prop('checked', false);
          $(this).dialog('close');
        }
      },
      close: function() {
        $(this).dialog('destroy');
      }
    });
  };

  $('#travel_list').on('click', 'th .fa-sort', function() {
    var $form, field, indexOfTh, order, searchData;
    indexOfTh = $(this).parent().index();
    field = $(this).attr('data-field');
    $form = $('#searchFormWrapper').find('form');
    order = $form.find('#order_dir').val();
    order = order === 'desc' ? 'asc' : 'desc';
    $form.find('#order_field').val(field);
    $form.find('#order_dir').val(order);
    searchData = $form.serialize();
    return $.ajax({
      method: 'POST',
      url: Routing.generate('OpitNotesTravelBundle_travel_list'),
      data: "showList=1&" + searchData
    }).done(function(data) {
      $('#travel_list').html(data);
      $(document).data('notes').funcs.initListPageListeners();
      $(document).data('notes').funcs.initPager();
      if (order === 'desc') {
        return $('#travel_list').find('th').eq(indexOfTh).children().addClass('fa-sort-desc');
      } else {
        return $('#travel_list').find('th').eq(indexOfTh).children().addClass('fa-sort-asc');
      }
    });
  });

}).call(this);
