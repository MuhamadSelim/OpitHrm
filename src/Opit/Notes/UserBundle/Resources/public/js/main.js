// Generated by CoffeeScript 1.7.1
(function() {
  var $subMenuClone, changeDeleteButton, cloneSubmenu, getAllNotifications, getUnreadNotifications, subMenuCloneClass;

  $(document).data('OpitNotesUserBundle', {});

  $.extend(true, $(document).data('OpitNotesUserBundle'), {
    funcs: {
      userEdit: function(userId, successCallback) {
        return $.ajax({
          method: 'GET',
          url: Routing.generate('OpitNotesUserBundle_user_show', {
            id: userId
          })
        }).done(function(data) {
          $('<div id="dialog-edititem"></div>').html(data).dialog({
            open: function() {
              return $('.ui-dialog-title').append('<i class="fa fa-list-alt"></i> Edit User');
            },
            width: 750,
            modal: true,
            buttons: {
              Save: function() {
                return $.ajax({
                  type: 'POST',
                  url: Routing.generate('OpitNotesUserBundle_user_add', {
                    id: userId
                  }),
                  data: $('#adduser_frm').serialize()
                }).done(function(data) {
                  var offset, response, url;
                  offset = $('.selected-page').data('offset');
                  url = Routing.generate('OpitNotesUserBundle_user_list');
                  if (url === window.location.pathname) {
                    response = data;
                    $.ajax({
                      type: 'POST',
                      url: url,
                      data: {
                        'offset': offset - 1,
                        'incrementOffset': false
                      }
                    }).done(function(data) {
                      var postActions;
                      $('#user-list').html(data);
                      $(document).data('notes').funcs.initListPageListeners();
                      $(document).data('notes').funcs.initPager();
                      $('.selected-page').each(function() {
                        return $(this).removeClass('selected-page');
                      });
                      $('[data-offset="' + offset + '"]').addClass('selected-page');
                      if (successCallback != null) {
                        postActions = successCallback(response, "update", "User modified successfully");
                      }
                      if (postActions || postActions === void 0) {
                        return $('#dialog-edititem').dialog('destroy');
                      }
                    });
                  } else {
                    $('#dialog-edititem').dialog('destroy');
                  }
                }).fail(function(data) {
                  return successCallback($.parseJSON(data.responseText), "update", "Error");
                });
              },
              Close: function() {
                $('#dialog-edititem').dialog("destroy");
              }
            }
          });
          return;
        });
      }
    }
  });

  $subMenuClone = {};

  subMenuCloneClass = '.subMenuClone';

  cloneSubmenu = function() {
    if ($('body').children(subMenuCloneClass).length) {
      $('body').find(subMenuCloneClass).remove();
    }
    $subMenuClone = $('.active').children('.subMenu').clone();
    $subMenuClone.addClass('subMenuClone');
    return $('body').append($subMenuClone);
  };

  changeDeleteButton = function(disableInputCheck) {
    var $deleteButton;
    if (disableInputCheck == null) {
      disableInputCheck = false;
    }
    $deleteButton = $('#delete');
    $deleteButton.attr('disabled', 'disabled');
    $deleteButton.addClass('button-disabled');
    if (disableInputCheck === false) {
      return $('#list-table tr td input[type=checkbox]').each(function() {
        if ($(this).prop('checked')) {
          $deleteButton.removeClass('button-disabled');
          $deleteButton.removeAttr('disabled');
          return false;
        }
      });
    }
  };

  getAllNotifications = function($notificationsWrapper) {
    var changeStatus;
    changeStatus = function(el, callback) {
      if (el.closest('.notification').hasClass('unread')) {
        $.ajax({
          method: 'POST',
          url: Routing.generate('OpitNotesTravelBundle_notifications_state_change'),
          data: {
            "id": el.data('id')
          }
        }).complete(function() {
          el.closest('.notification').removeClass('unread');
          console.log(callback);
          if (callback != null) {
            callback();
          }
        });
      } else {
        if (callback != null) {
          callback();
        }
      }
    };
    return $.ajax({
      method: 'POST',
      url: Routing.generate('OpitNotesTravelBundle_notifications_all')
    }).done(function(data) {
      $notificationsWrapper.html(data);
      $('.notification-header-delete i').on('click', function() {
        var notificationId, self;
        self = $(this);
        notificationId = $(self).data('id');
        return $.ajax({
          method: 'POST',
          url: Routing.generate('OpitNotesTravelBundle_notification_delete'),
          data: {
            "id": notificationId
          }
        }).done(function(data) {
          return self.closest('.notification').remove();
        });
      });
      $('.notification-message').on('click', function(event) {
        var self;
        event.stopPropagation();
        self = $(this);
        changeStatus(self);
      });
      $('.notification-details').on('click.notifications', function(event) {
        var self;
        event.preventDefault();
        event.stopPropagation();
        self = $(this);
        changeStatus(self.parent(), function() {
          window.location.href = self.attr('href');
        });
      });
      return $notificationsWrapper.removeClass('display-none');
    });
  };

  getUnreadNotifications = function() {
    return $.ajax({
      method: 'POST',
      url: Routing.generate('OpitNotesTravelBundle_notifications_unread_count')
    }).done(function(data) {
      var $notificationsIcon, $unreadNotificationsCount, unreadNotificationCount;
      $unreadNotificationsCount = $('#unread-notifications-count');
      $notificationsIcon = $('#notifications i');
      unreadNotificationCount = $('#unread-notifications').html();
      if (unreadNotificationCount !== data) {
        if ('0' !== data) {
          $unreadNotificationsCount.removeClass('display-none');
          $notificationsIcon.addClass('active-text');
          $unreadNotificationsCount.html(data);
          $('#notifications').addClass('right-0');
        }
      }
      if ('0' === $unreadNotificationsCount.html()) {
        $unreadNotificationsCount.addClass('display-none');
        $notificationsIcon.removeClass('active-text');
        $('#notifications').removeClass('right-0');
      }
      return setTimeout(getUnreadNotifications, 10000);
    });
  };

  $.fn.extend({
    formIsEmpty: function(element) {
      var $el, exists;
      $el = element ? $(element) : $(this);
      exists = false;
      $el.find(':input').each(function() {
        if ($(this).attr('type') !== 'hidden') {
          if ($(this).val()) {
            return exists = true;
          }
        }
      });
      return exists;
    },
    checkAll: function(selector) {
      var $el, checkAll;
      $el = selector ? $(selector) : $(this);
      checkAll = $el.filter(':checked').length === $el.length ? false : true;
      $el.each(function() {
        return $(this).prop('checked', checkAll);
      });
      return changeDeleteButton();
    }
  });

  $(document).ready(function() {
    var $deleteButton, $notificationsWrapper;
    $(document).data('notes').funcs.initListPageListeners();
    $(document).data('notes').funcs.initPager();
    $notificationsWrapper = $('#notifications-wrapper');
    $('#notifications > i.fa-bell-o').on('click.notifications', function(event) {
      var $container;
      event.stopPropagation();
      $container = $(this).parent();
      if (!$container.hasClass('right-300')) {
        $container.addClass('right-300');
        $(this).removeClass('active-text');
        $('#unread-notifications-count').addClass('display-none');
        getAllNotifications($notificationsWrapper);
        $('#notifications-wrapper').on('click.notifications', function(event) {
          return event.stopPropagation();
        });
        return $('body').on('click.notifications', function(event) {
          if ($('#notifications').hasClass('right-300')) {
            $('#notifications').removeClass('right-300');
            return $('body, #notifications-wrapper').off('click.notifications');
          }
        });
      } else {
        $container.removeClass('right-300');
        return $('body, #notifications-wrapper').off('click.notifications');
      }
    });
    if ($('#notifications').length > 0) {
      getUnreadNotifications();
    }
    $('#loggedInUser').click(function() {
      var _ref;
      return $(document).data('OpitNotesUserBundle').funcs.userEdit($(this).children('span').data('user-id'), (_ref = $(document).data('OpitNotesUserBundle').funcs) != null ? _ref.showAlert : void 0);
    });
    $deleteButton = $('#delete');
    $deleteButton.attr('disabled', 'disabled');
    $deleteButton.addClass('button-disabled');
    $deleteButton.removeClass('delete');
    $('#list-table tr td').on('change', 'input[type=checkbox]', function() {
      return changeDeleteButton();
    });
    $(document).on('click', '.ui-button-text', function() {
      var buttonText;
      buttonText = $(this).html();
      if (buttonText === 'Yes' || buttonText === 'Continue') {
        return changeDeleteButton(true);
      }
    });
    cloneSubmenu();
    $('.menu .mainMenu').click(function() {
      $('.menu .mainMenu').removeClass('active');
      $(this).addClass("active");
      return cloneSubmenu();
    });
    $(window).scroll(function() {
      var $menuWrapperActive;
      $menuWrapperActive = $('#menuWrapper .active');
      if ($menuWrapperActive.length > 0) {
        if ($menuWrapperActive.children('.subMenu').offset().top < $(window).scrollTop()) {
          if ($('body').has(subMenuCloneClass).length) {
            $subMenuClone.css({
              display: 'block'
            });
          }
        }
        if ($menuWrapperActive.children('.subMenu').offset().top > $(window).scrollTop()) {
          if ($('body').has(subMenuCloneClass).length) {
            return $subMenuClone.css({
              display: 'none'
            });
          }
        }
      }
    });
    return $('#changePassword').on('click', function() {
      var id;
      id = $(this).attr("data-user-id");
      return $.ajax({
        method: 'GET',
        url: Routing.generate('OpitNotesUserBundle_user_show_password', {
          id: id
        })
      }).done(function(data) {
        return $('<div id="password-dialog"></div>').html(data).dialog({
          open: function() {
            $('.ui-dialog-title').append('<i class="fa fa-list-alt"></i> Reset Password');
            return $(this).html(data);
          },
          width: 500,
          modal: true,
          buttons: {
            Save: function() {
              return $.ajax({
                type: 'POST',
                global: false,
                url: Routing.generate('OpitNotesUserBundle_user_update_password', {
                  id: id
                }),
                data: $('#changePassword_frm').serialize()
              }).done(function(data) {
                $('#password-dialog').dialog('destroy');
                return $(document).data('notes').funcs.showAlert(data, 'update', 'Password successfully changed');
              }).fail(function(data) {
                data = $.parseJSON(data.responseText);
                return $(document).data('notes').funcs.showAlert(data, 'update', 'Password reset successfully');
              });
            },
            Close: function() {
              console.log($('#password-dialog'));
              $('#password-dialog').dialog('destroy');
            }
          }
        });
      });
    });
  });

}).call(this);
