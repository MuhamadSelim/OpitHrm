// Generated by CoffeeScript 1.6.3
(function() {
  var deleteGroup, showRoleDialog;

  $('#reply-message').css({
    display: 'none'
  });

  showRoleDialog = function(groupId, groupName, description, url, title, flashMessage) {
    var selfDialog;
    $('#dialog-edititem h2').html(title);
    $('.description').html(description);
    selfDialog = $('<div>');
    selfDialog.html($('#roleForm').html());
    selfDialog.find('#group').val(groupName);
    return selfDialog.dialog({
      width: 400,
      modal: true,
      title: title,
      buttons: {
        Create: function() {
          var group;
          if (selfDialog.find('#group').val()) {
            group = selfDialog.find('#group').val();
            return $.ajax({
              type: 'POST',
              url: Routing.generate(url, {
                id: groupId
              }),
              data: {
                'group': group
              }
            }).done(function(data) {
              if (data.duplicate) {
                $(document).data('notes').funcs.showAlert(data, 'create', 'Role already exists', true);
              } else {
                $('#list-table').replaceWith(data);
                $(document).data('notes').funcs.showAlert(data, 'create', flashMessage);
              }
              return selfDialog.dialog('destroy');
            });
          } else {
            return selfDialog.find('#reply-message').css({
              display: 'block'
            });
          }
        },
        Close: function() {
          return selfDialog.dialog('destroy');
        }
      }
    });
  };

  deleteGroup = function(groupId, roleName) {
    var selfDialog;
    if (!!roleName) {
      selfDialog = $('<div>');
      selfDialog.html("Are you sure you want to delete role(s) \"" + roleName + "\"?");
      return selfDialog.dialog({
        width: 400,
        modal: true,
        title: 'Delete role',
        buttons: {
          Continue: function() {
            $.ajax({
              type: 'POST',
              url: Routing.generate('OpitNotesUserBundle_admin_groups_delete'),
              data: {
                id: groupId
              }
            }).done(function(data) {
              if (data.userRelated) {
                return $(document).data('notes').funcs.showAlert(data, 'create', 'Deletion not allowed for roles with relations', true);
              } else {
                $('#list-table').replaceWith(data);
                return $(document).data('notes').funcs.showAlert(data, 'create', 'Role(s) successfully deleted!');
              }
            });
            return selfDialog.dialog('destroy');
          },
          Cancel: function() {
            $('#list-table').find('input:checkbox').each(function() {
              return $(this).attr('checked', false);
            });
            return selfDialog.dialog('destroy');
          }
        }
      });
    }
  };

  $('#main-wrapper').on('click', '#add', function() {
    return showRoleDialog('new', '', 'Create a new role.', 'OpitNotesUserBundle_admin_groups_show', 'Create role', 'Role successfully created!');
  });

  $('#main-wrapper').on('click', '.edit-group', function() {
    var groupId, groupName;
    groupId = $(this).closest('tr').children('td:nth-child(2)').html();
    groupName = $(this).closest('tr').children('td:nth-child(3)').html();
    return showRoleDialog(groupId, groupName, 'Edit selected role.', 'OpitNotesUserBundle_admin_groups_show', 'Edit role', 'Role successfully edited!');
  });

  $('#main-wrapper').on('click', '.remove-group', function() {
    var groupId, parentTr, roleName;
    parentTr = $(this).closest('tr');
    roleName = parentTr.children('td:nth-child(3)').html();
    groupId = parentTr.children('td:nth-child(2)').html();
    parentTr.find('input').attr('checked', true);
    return deleteGroup(groupId, roleName);
  });

  $('#delete').on('click', function() {
    var groupIds, roleName;
    groupIds = [];
    roleName = '';
    $('.list-delete-user').each(function() {
      var parentTr;
      if ($(this).prop('checked')) {
        parentTr = $(this).closest('tr');
        groupIds.push(parentTr.children('td:nth-child(2)').html());
        return roleName += parentTr.children('td:nth-child(3)').html() + ', ';
      }
    });
    roleName = roleName.substring(0, roleName.length - 2);
    return deleteGroup(groupIds, roleName);
  });

  $('.width-24-fix .fa-trash-o').on('click', function() {
    return $('.list-delete-user:enabled').checkAll();
  });

}).call(this);
